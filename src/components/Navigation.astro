---
interface NavigationItem {
  icon: string;
  color: string;
  label: string;
  customClass?: string;
  target?: string;
}

const navigationItems: NavigationItem[] = [
  {
    icon: "/svg/dollar.svg",
    color: "blue",
    label: "Resumen",
    customClass: "nav-dashboard",
    target: "dashboard"
  },
  {
    icon: "/svg/bill.svg",
    color: "purple",
    label: "Cargar Factura",
    customClass: "nav-loadbill",
    target: "loadbill"
  },
  {
    icon: "/svg/bill-list.svg",
    color: "green",
    label: "Facturas",
    customClass: "nav-invoices",
    target: "invoices"
  },
  {
    icon: "/svg/settings.svg",
    color: "indigo",
    label: "Configuración",
    customClass: "nav-settings",
    target: "settings"
  }
];

const gradientMapping: Record<string, string> = {
  blue: "linear-gradient(hsl(223, 90%, 50%), hsl(208, 90%, 50%))",
  purple: "linear-gradient(hsl(283, 90%, 50%), hsl(268, 90%, 50%))",
  red: "linear-gradient(hsl(3, 90%, 50%), hsl(348, 90%, 50%))",
  indigo: "linear-gradient(hsl(253, 90%, 50%), hsl(238, 90%, 50%))",
  orange: "linear-gradient(hsl(43, 90%, 50%), hsl(28, 90%, 50%))",
  green: "linear-gradient(hsl(123, 90%, 40%), hsl(108, 90%, 40%))",
};
---

<nav class="main-navigation" role="navigation" aria-label="Navegación principal">
  <div class="icon-btns">
    {navigationItems.map((item) => (
      <button
        type="button"
        class={`icon-btn ${item.customClass || ""}`}
        aria-label={item.label}
        data-target={item.target}
        style={`--gradient: ${gradientMapping[item.color] || item.color}`}
      >
        <span class="icon-btn__back" style={`background: ${gradientMapping[item.color] || item.color}`}></span>
        <span class="icon-btn__front">
          <span class="icon-btn__icon" aria-hidden="true">
            <img 
              src={item.icon} 
              alt={item.label} 
              width="24" 
              height="24" 
            />
          </span>
        </span>
        <span class="icon-btn__label">{item.label}</span>
      </button>
    ))}
  </div>
</nav>

<style>
  .main-navigation {
    width: 100%;
  }

  .icon-btns {
    margin: auto;
    padding: 1rem;
    display: grid;
    grid-template-rows: repeat(4, 1fr);
    gap: 1.5rem;
    justify-items: center;
    align-items: center;
    max-width: 120px;
  }

  .icon-btn {
    background-color: transparent;
    border: none;
    outline: none;
    position: relative;
    width: 4.5em;
    height: 4.5em;
    perspective: 24em;
    transform-style: preserve-3d;
    -webkit-tap-highlight-color: transparent;
    cursor: pointer;
  }

  .icon-btn__back,
  .icon-btn__front,
  .icon-btn__label {
    transition: opacity 0.3s cubic-bezier(0.83, 0, 0.17, 1),
      transform 0.3s cubic-bezier(0.83, 0, 0.17, 1);
  }

  .icon-btn__back,
  .icon-btn__front {
    border-radius: 1.25em;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .icon-btn__back {
    box-shadow: 0.5em -0.5em 0.75em hsla(223, 10%, 10%, 0.15);
    display: block;
    transform: rotate(15deg);
    transform-origin: 100% 100%;
  }

  .icon-btn__front {
    background-color: hsla(0, 0%, 100%, 0.15);
    box-shadow: 0 0 0 0.1em hsla(0, 0%, 100%, 0.3) inset;
    backdrop-filter: blur(0.75em);
    -webkit-backdrop-filter: blur(0.75em);
    display: flex;
    transform-origin: 80% 50%;
  }

  .icon-btn__icon {
    margin: auto;
    width: 1.5em;
    height: 1.5em;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .icon-btn__icon img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .icon-btn__label {
    font-size: 1em;
    white-space: nowrap;
    text-align: center;
    line-height: 2;
    opacity: 0;
    position: absolute;
    top: 100%;
    right: 0;
    left: 0;
    transform: translateY(0);
    color: var(--text-color, #333);
    font-weight: 500;
  }

  .icon-btn:focus-visible .icon-btn__back,
  .icon-btn:hover .icon-btn__back {
    transform: rotate(25deg) translate3d(-0.5em, -0.5em, 0.5em);
  }

  .icon-btn:focus-visible .icon-btn__front,
  .icon-btn:hover .icon-btn__front {
    transform: translateZ(2em);
  }

  .icon-btn:focus-visible .icon-btn__label,
  .icon-btn:hover .icon-btn__label {
    opacity: 1;
    transform: translateY(20%);
  }

  /* Estilos para el estado activo de navegación */
  .icon-btn.active .icon-btn__back {
    transform: rotate(25deg) translate3d(-0.5em, -0.5em, 0.5em);
    box-shadow: 0.5em -0.5em 1.5em hsla(223, 10%, 10%, 0.25);
  }

  .icon-btn.active .icon-btn__front {
    transform: translateZ(2em);
    background-color: hsla(0, 0%, 100%, 0.25);
    box-shadow: 0 0 0 0.15em hsla(0, 0%, 100%, 0.4) inset;
  }

  .icon-btn.active .icon-btn__label {
    opacity: 1;
    transform: translateY(20%);
    font-weight: 600;
    color: var(--primary-color, #3b82f6);
  }

  /* Animación suave para transiciones */
  .icon-btn.active {
    animation: activeGlow 0.3s ease-in-out;
  }

  @keyframes activeGlow {
    0% {
      filter: brightness(1);
    }
    50% {
      filter: brightness(1.1);
    }
    100% {
      filter: brightness(1);
    }
  }

  /* Mejoras para accesibilidad */
  .icon-btn:focus {
    outline: 2px solid var(--primary-color, #3b82f6);
    outline-offset: 4px;
  }

  /* Responsive design */
  @media (min-width: 768px) {
    .icon-btns {
      grid-template-rows: repeat(4, 1fr);
      max-width: 120px;
    }
  }

  @media (max-width: 640px) {
    .icon-btns {
      grid-template-rows: repeat(4, 1fr);
      gap: 1.2rem;
      padding: 1rem 0;
      max-width: 100px;
    }
    
    .icon-btn {
      width: 3.5em;
      height: 3.5em;
    }
    
    .icon-btn__label {
      font-size: 0.9em;
    }
  }
</style>

<script>
  // La funcionalidad de navegación SPA se maneja en navigation.js
  // Este script solo se asegura de que los botones estén correctamente configurados
  document.addEventListener('DOMContentLoaded', () => {
    // Esperar a que el SPANavigator esté disponible
    const waitForSPANavigator = () => {
      if (window.spaNavigator) {
        console.log('✅ Navigation.astro: SPANavigator detectado y listo');
        
        // Establecer botón activo inicial
        const currentView = window.spaNavigator.currentView || 'dashboard';
        const activeButton = document.querySelector(`[data-target="${currentView}"]`);
        if (activeButton) {
          activeButton.classList.add('active');
        }
      } else {
        // Reintentar después de 100ms
        setTimeout(waitForSPANavigator, 100);
      }
    };
    
    waitForSPANavigator();
  });
</script>

