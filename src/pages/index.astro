---
import AppLayout from '../layouts/AppLayout.astro';
import Navigation from '../components/Navigation.astro';
import Dashboard from '../views/Dashboard.astro';
import Invoices from '../views/Invoices.astro';
import Suppliers from '../views/Suppliers.astro';
import Export from '../views/Export.astro';
import Settings from '../views/Settings.astro';
---

<AppLayout title="Sistema FrontDesk - Gestión de Facturas">
  <!-- Header del Sistema -->
  <header class="app-header">
    <h1>📋 Sistema FrontDesk - Gestión de Facturas</h1>
    <div class="user-info">
      👤 Usuario: Admin | 🕒 Última sesión: Hoy 14:30
    </div>
  </header>

  <!-- Navegación Principal -->
  <Navigation />

  <!-- Contenido Principal - Solo contenedores de vistas -->
  <main class="app-main">
    <div id="dashboard-view" class="app-view active">
      <Dashboard />
    </div>
    
    <div id="invoices-view" class="app-view">
      <Invoices />
    </div>
    
    <div id="suppliers-view" class="app-view">
      <Suppliers />
    </div>
    
    <div id="export-view" class="app-view">
      <Export />
    </div>
    
    <div id="settings-view" class="app-view">
      <Settings />
    </div>
  </main>
</AppLayout>

  <script>
    // Navegación SPA mejorada
    class SPANavigator {
      constructor() {
        this.currentView = 'dashboard';
        this.views = new Map();
        this.initViews();
        this.initNavigation();
      }

      initViews() {
        // Registrar todas las vistas disponibles
        const viewElements = document.querySelectorAll('.app-view');
        viewElements.forEach(view => {
          const viewId = view.id.replace('-view', '');
          this.views.set(viewId, view);
        });
      }

      initNavigation() {
        const navButtons = document.querySelectorAll('.nav-btn');
        
        navButtons.forEach(button => {
          button.addEventListener('click', (e) => {
            const targetView = e.target.dataset.view;
            this.navigateTo(targetView);
          });
        });
      }

      navigateTo(viewName) {
        // Validar que la vista existe
        if (!this.views.has(viewName)) {
          console.error(`Vista '${viewName}' no encontrada`);
          return;
        }

        // Ocultar vista actual
        if (this.views.has(this.currentView)) {
          this.views.get(this.currentView).classList.remove('active');
        }

        // Mostrar nueva vista
        this.views.get(viewName).classList.add('active');
        
        // Actualizar navegación
        this.updateActiveNav(viewName);
        
        // Actualizar estado
        this.currentView = viewName;
        
        // Ejecutar lógica específica de la vista
        this.onViewChange(viewName);
      }

      updateActiveNav(activeView) {
        const navButtons = document.querySelectorAll('.nav-btn');
        navButtons.forEach(btn => {
          btn.classList.remove('active');
          if (btn.dataset.view === activeView) {
            btn.classList.add('active');
          }
        });
      }

      onViewChange(viewName) {
        // Lógica específica cuando cambia la vista
        switch(viewName) {
          case 'invoices':
            this.initInvoicesFeatures();
            break;
          case 'suppliers':
            this.initSuppliersFeatures();
            break;
          // ... otros casos
        }
      }

      initInvoicesFeatures() {
        // Funcionalidad específica de facturas
        const searchBox = document.querySelector('#invoices-view .search-box');
        if (searchBox && !searchBox.hasAttribute('data-initialized')) {
          searchBox.addEventListener('input', (e) => {
            this.filterInvoices(e.target.value);
          });
          searchBox.setAttribute('data-initialized', 'true');
        }
      }

      filterInvoices(searchTerm) {
        const tableRows = document.querySelectorAll('#invoices-view .invoice-table tbody tr');
        tableRows.forEach(row => {
          const text = row.textContent?.toLowerCase() || '';
          row.style.display = text.includes(searchTerm.toLowerCase()) ? '' : 'none';
        });
      }
    }

    // Inicializar SPA cuando el DOM esté listo
    document.addEventListener('DOMContentLoaded', () => {
      window.spaNavigator = new SPANavigator();
    });
  </script>

  <style lang="stylus">
    .app-main
      padding 2rem
    
    .app-view
      display none
      
    .app-view.active
      display block
      animation fadeIn 0.3s ease-in-out
    
    @keyframes fadeIn
      from
        opacity 0
        transform translateY(10px)
      to
        opacity 1
        transform translateY(0)
</style>

