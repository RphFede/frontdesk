<section id="loadbill-view" class="view">

<div class="view-container">  
  <div class="form-section">
    <form id="loadbill-form">
      <!-- Informaci√≥n del Proveedor -->
      <fieldset>
        <legend>üè¢ Informaci√≥n de proveedor</legend>
        <div class="row">
          <div class="group">
            <label for="supplier">Raz√≥n Social *</label>
            <select id="supplier" required>
              <option value="">Seleccionar proveedor...</option>
              <option value="1">Constructora ABC S.A.</option>
              <option value="2">Suministros Municipales Ltda.</option>
              <option value="3">Servicios Generales SRL</option>
              <option value="4">TechSolutions SpA</option>
              <option value="5">Mantenimiento Integral Ltda.</option>
            </select>
          </div>
          <div class="group">
            <label for="supplier-rut">CUIT</label>
            <input type="text" id="supplier-rut" placeholder="12.345.678-9" readonly>
          </div>
          <div class="group">
            <label for="add-supplier">Agregar Nuevo</label>
            <button type="button" id="add-supplier">+</button>
          </div>          
        </div>
      </fieldset>

      <!-- Informaci√≥n de la Factura -->
      <fieldset>
        <legend>üìÑ Datos de factura</legend>
        <div class="row">
          <div class="group">
            <label for="classification">Clasificaci√≥n *</label>
            <select id="classification" required>
              <option value="">Seleccionar clasificaci√≥n...</option>
              <option value="consumer goods">Consumo</option>
              <option value="services">Servicio</option>
              <option value="capital goods">Capital</option>
            </select>
          </div>
          <div class="group">
            <label for="invoice-number">Nro. Factura *</label>
            <input type="text" id="invoice-number" placeholder="Ej: B-00001-01234" required>
          </div>
          <div class="group">
            <label for="invoice-date">Fecha de Emisi√≥n *</label>
            <input type="date" id="invoice-date" required>
          </div>
        </div>
        
        <div class="row">
          <div class="group">
            <label for="description">Descripci√≥n *</label>
            <textarea id="description" placeholder="Descripci√≥n de bien o servicio..." required></textarea>
          </div>
        </div>
      </fieldset>

      <!-- Botones de Acci√≥n -->
      <div class="actions">
        <button type="button" class="clean" id="clean-btn">‚ùå Limpiar valores</button>
        <button type="submit" class="submit" id="submit-btn">‚úÖ Registrar factura</button>
      </div>
    </form>
  </div>
</div>
</section>
<script>
document.getElementById('loadbill-form').addEventListener('submit', async function(event) {
  event.preventDefault();

  const supplierSelect = document.getElementById('supplier');
  const supplier = supplierSelect.options[supplierSelect.selectedIndex].text;
  const supplierValue = supplierSelect.value;
  const supplierRut = document.getElementById('supplier-rut').value;
  const classification = document.getElementById('classification').value;
  const invoiceNumber = document.getElementById('invoice-number').value;
  const invoiceDate = document.getElementById('invoice-date').value;
  const description = document.getElementById('description').value;

  const invoiceData = {
    supplier: supplier,
    supplier_rut: supplierRut,
    classification: classification,
    invoice_number: invoiceNumber,
    invoice_date: invoiceDate,
    description: description
  };

  try {
    const response = await fetch('http://localhost:5000/invoices', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(invoiceData)
    });

    if (!response.ok) {
      const errorData = await response.json();
      alert('Error: ' + errorData.error);
      return;
    }

    alert('Invoice registered successfully!');
    this.reset();
  } catch (error) {
    alert('Failed to submit invoice: ' + error.message);
  }
});
</script>

<style lang="stylus">

.form-section
  background var(--bg-secondary)
  border-radius 12px
  border 1px solid var(--border-color)
  padding 2rem
  box-shadow 0 2px 8px rgba(0, 0, 0, 0.1)
  
fieldset
  border 1px solid var(--border-color)
  border-radius 8px
  padding 1.5rem
  margin-bottom 2rem
  background transparent
  
  legend
    padding 0 1rem
    color var(--text-primary)
    font-weight 600
    font-size 1.1rem

.row
  display flex
  gap 1.5rem
  margin-bottom 1.5rem
  
  @media (max-width: 768px)
    flex-direction column
    gap 1rem
  
.group
  flex 1
  
  label
    display block
    margin-bottom 0.5rem
    color var(--text-primary)
    font-weight 500
    font-size 0.9rem
  
  input, select, textarea
    width 100%
    padding 0.75rem
    border 1px solid var(--border-color)
    border-radius 6px
    background var(--bg-input)
    color var(--text-primary)
    font-size 1rem
    transition border-color 0.2s ease
    
    &:focus
      outline none
      border-color var(--accent-primary)
      box-shadow 0 0 0 2px rgba(59, 130, 246, 0.1)
    
    &:required:invalid
      border-color var(--error-color)
    
    &[readonly]
      background var(--bg-disabled)
      color var(--text-secondary)
      cursor not-allowed
  
  textarea
    min-height 100px
    resize vertical
    font-family inherit

.form-actions
  display flex
  gap 1rem
  justify-content flex-end
  padding-top 2rem
  border-top 1px solid var(--border-color)
  
  @media (max-width: 768px)
    flex-direction column
  
  button
    padding 0.75rem 2rem
    border none
    border-radius 6px
    font-weight 600
    font-size 1rem
    cursor pointer
    transition all 0.2s ease
      
      &:hover
        background var(--bg-hover)
    
    &.clean
      background var(--accent-primary)
      color white
      
      &:hover
        background var(--accent-hover)
        transform translateY(-1px)
    
    &.submit
      background var(--success-color)
      color white
      
      &:hover
        background #5a8a5a
        transform translateY(-1px)
</style>

<script>
  // Funcionalidad para el formulario de carga de facturas
  document.addEventListener('DOMContentLoaded', function() {
    const supplierSelect = document.getElementById('supplier');
    const supplierRutInput = document.getElementById('supplier-rut');
    const netAmountInput = document.getElementById('net-amount');
    const taxAmountInput = document.getElementById('tax-amount');
    const totalAmountInput = document.getElementById('total-amount');
    const form = document.getElementById('loadbill-form');
    
    // Datos de proveedores (en una aplicaci√≥n real, esto vendr√≠a de una API)
    const suppliers = {
      '1': { rut: '12.345.678-9', name: 'Constructora ABC S.A.' },
      '2': { rut: '98.765.432-1', name: 'Suministros Municipales Ltda.' },
      '3': { rut: '55.666.777-8', name: 'Servicios Generales SRL' },
      '4': { rut: '11.222.333-4', name: 'TechSolutions SpA' },
      '5': { rut: '77.888.999-0', name: 'Mantenimiento Integral Ltda.' }
    };
    
    // Actualizar RUT cuando se selecciona un proveedor
    supplierSelect?.addEventListener('change', function() {
      const selectedSupplier = suppliers[this.value];
      if (selectedSupplier) {
        supplierRutInput.value = selectedSupplier.rut;
      } else {
        supplierRutInput.value = '';
      }
    });
    
    // Calcular IVA y total autom√°ticamente
    netAmountInput?.addEventListener('input', function() {
      const netAmount = parseFloat(this.value) || 0;
      const taxAmount = netAmount * 0.19; // IVA 19%
      const totalAmount = netAmount + taxAmount;
      
      taxAmountInput.value = taxAmount.toFixed(2);
      totalAmountInput.value = totalAmount.toFixed(2);
    });
    
    // Manejar env√≠o del formulario
    form?.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Recopilar datos del formulario
      const formData = new FormData(this);
      const invoiceData = {
        supplierId: supplierSelect.value,
        supplierName: suppliers[supplierSelect.value]?.name,
        invoiceNumber: document.getElementById('invoice-number').value,
        issueDate: document.getElementById('invoice-date').value,
        dueDate: document.getElementById('due-date').value,
        description: document.getElementById('description').value,
        netAmount: parseFloat(netAmountInput.value),
        taxAmount: parseFloat(taxAmountInput.value),
        totalAmount: parseFloat(totalAmountInput.value),
        category: document.getElementById('category').value,
        paymentMethod: document.getElementById('payment-method').value,
        currency: document.getElementById('currency').value,
        status: 'Pendiente'
      };
      
      // Aqu√≠ se enviar√≠an los datos a la API
      console.log('Datos de la factura:', invoiceData);
      
      // Mostrar mensaje de √©xito
      alert('‚úÖ Factura registrada exitosamente');
      
      // Limpiar formulario
      this.reset();
      supplierRutInput.value = '';
      taxAmountInput.value = '';
      totalAmountInput.value = '';
    });
    
    // Bot√≥n cancelar
    document.getElementById('cancel-btn')?.addEventListener('click', function() {
      if (confirm('¬øEst√°s seguro de que quieres cancelar? Se perder√°n todos los datos ingresados.')) {
        form.reset();
        supplierRutInput.value = '';
        taxAmountInput.value = '';
        totalAmountInput.value = '';
      }
    });
    
    // Bot√≥n guardar borrador
    document.getElementById('save-draft-btn')?.addEventListener('click', function() {
      // Aqu√≠ se guardar√≠a como borrador
      alert('üíæ Borrador guardado exitosamente');
    });
  });
</script> });
  });
</script>